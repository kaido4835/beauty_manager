from datetime import datetime
from config import MONTHS, WEEKDAYS, SERVICES


def format_date_russian(date_obj):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    day = date_obj.day
    month = MONTHS[date_obj.month]
    weekday = WEEKDAYS[date_obj.weekday()]
    return f"{weekday}, {day} {month}"


def format_client_name_with_profile(client_name, username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∫–ª–∏–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å (HTML)"""
    if profile_link and username:
        # –ï—Å–ª–∏ –µ—Å—Ç—å username, –¥–µ–ª–∞–µ–º –∏–º—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º
        return f'<a href="{profile_link}">{client_name}</a>'
    elif profile_link:
        # –ï—Å–ª–∏ –Ω–µ—Ç username, –Ω–æ –µ—Å—Ç—å –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞
        return f'<a href="{profile_link}">{client_name}</a>'
    else:
        # –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Å—Å—ã–ª–∫–∏
        return client_name


def format_username_display(username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ username (HTML)"""
    if username and profile_link:
        return f'<a href="{profile_link}">@{username}</a>'
    elif username:
        return f"@{username}"
    else:
        return "–ù–µ —É–∫–∞–∑–∞–Ω"


def escape_html(text):
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML —Å–∏–º–≤–æ–ª—ã"""
    if not text:
        return ""
    return str(text).replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")


def validate_time_format(time_str):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –ß–ß:–ú–ú"""
    try:
        time_parts = time_str.split(':')
        if len(time_parts) != 2:
            return False
        hours = int(time_parts[0])
        minutes = int(time_parts[1])
        return 0 <= hours <= 23 and 0 <= minutes <= 59
    except ValueError:
        return False


def validate_date_format(date_str):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã –î–î.–ú–ú.–ì–ì–ì–ì"""
    try:
        datetime.strptime(date_str, '%d.%m.%Y')
        return True
    except ValueError:
        return False


def validate_client_name(name):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    return name.strip() != "" and len(name.strip()) >= 2


def validate_service_name(service):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏"""
    return service.strip() != "" and len(service.strip()) >= 2


def validate_phone_number(phone):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    if not phone:
        return True  # –¢–µ–ª–µ—Ñ–æ–Ω –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω

    # –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ –ø–ª—é—Å–∞
    clean_phone = ''.join(c for c in phone if c.isdigit() or c == '+')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∏ —Ñ–æ—Ä–º–∞—Ç
    if len(clean_phone) >= 10:
        return True
    return False


# ===== –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê =====

def format_admin_schedule_text(appointments, target_date):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏ (HTML)"""
    date_text = format_date_russian(target_date)

    if appointments:
        schedule_text = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date_text}:\n\n"

        if len(appointments[0]) == 6:  # –° ID –∏ –ø—Ä–æ—Ñ–∏–ª–µ–º
            for appointment_id, client_name, appointment_time, service, username, profile_link in appointments:
                clickable_name = format_client_name_with_profile(client_name, username, profile_link)
                schedule_text += f"üïê {escape_html(appointment_time)} - {clickable_name}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {escape_html(service)}\n"
                if username:
                    username_display = format_username_display(username, profile_link)
                    schedule_text += f"üë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}\n"
                schedule_text += f"üÜî ID: {appointment_id}\n\n"
        elif len(appointments[0]) == 5:  # –ë–µ–∑ ID, –Ω–æ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
            for client_name, appointment_time, service, username, profile_link in appointments:
                clickable_name = format_client_name_with_profile(client_name, username, profile_link)
                schedule_text += f"üïê {escape_html(appointment_time)} - {clickable_name}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {escape_html(service)}\n"
                if username:
                    username_display = format_username_display(username, profile_link)
                    schedule_text += f"üë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}\n"
                schedule_text += "\n"
        elif len(appointments[0]) == 4:  # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç —Å ID
            for appointment_id, client_name, appointment_time, service in appointments:
                schedule_text += f"üïê {escape_html(appointment_time)} - {escape_html(client_name)}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {escape_html(service)}\n"
                schedule_text += f"üÜî ID: {appointment_id}\n\n"
        else:  # –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –±–µ–∑ ID
            for client_name, appointment_time, service in appointments:
                schedule_text += f"üïê {escape_html(appointment_time)} - {escape_html(client_name)}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {escape_html(service)}\n\n"
    else:
        schedule_text = f"üìÖ –ù–∞ {date_text} –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç"

    return schedule_text


def format_admin_stats(stats):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    return f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π:

üìÖ –°–µ–≥–æ–¥–Ω—è: {stats['today']} –∑–∞–ø–∏—Å–µ–π
‚û°Ô∏è –ó–∞–≤—Ç—Ä–∞: {stats['tomorrow']} –∑–∞–ø–∏—Å–µ–π  
üìù –ù–∞ –Ω–µ–¥–µ–ª—é: {stats['week']} –∑–∞–ø–∏—Å–µ–π
üìã –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {stats['total']}
üë• –ö–ª–∏–µ–Ω—Ç–æ–≤ –≤ –±–∞–∑–µ: {stats['clients']}

–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:"""


# ===== –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í =====

def format_client_appointments(appointments):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –∫–ª–∏–µ–Ω—Ç–∞"""
    if not appointments:
        return "üìÖ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.\n\n–•–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É?"

    result = "üìÖ –í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n\n"

    for appointment_id, client_name, appointment_date, appointment_time, service, status in appointments:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)

        status_emoji = "‚úÖ" if status == "active" else "‚ùå"

        result += f"{status_emoji} {formatted_date}\n"
        result += f"üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}\n"
        result += f"üìã –£—Å–ª—É–≥–∞: {escape_html(service)}\n"
        result += f"üÜî ID: {appointment_id}\n\n"

    return result


def format_available_times_text(available_times, date_str):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    if not available_times:
        return f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ {date_str} –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É."

    date_obj = datetime.strptime(date_str, '%d.%m.%Y')
    formatted_date = format_date_russian(date_obj.date())

    times_text = ", ".join(available_times)

    return f"üïê –î–æ—Å—Ç—É–ø–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞ {formatted_date}:\n\n{times_text}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è:"


def format_services_text():
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —É—Å–ª—É–≥"""
    services_text = "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏:\n\n"

    service_emojis = {
        '–°—Ç—Ä–∏–∂–∫–∞': 'üíá‚Äç‚ôÄÔ∏è',
        '–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ': 'üé®',
        '–ú–∞–Ω–∏–∫—é—Ä': 'üíÖ',
        '–ú–∞—Å—Å–∞–∂': 'üíÜ‚Äç‚ôÄÔ∏è',
        '–ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è': 'üßñ‚Äç‚ôÄÔ∏è'
    }

    for service, duration in SERVICES.items():
        emoji = service_emojis.get(service, 'üìã')
        hours = duration // 60
        minutes = duration % 60

        if hours > 0 and minutes > 0:
            duration_text = f"{hours} —á {minutes} –º–∏–Ω"
        elif hours > 0:
            duration_text = f"{hours} —á"
        else:
            duration_text = f"{minutes} –º–∏–Ω"

        services_text += f"{emoji} {service} - {duration_text}\n"

    services_text += "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:"
    return services_text


def format_booking_confirmation(client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    try:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)

        return f"""üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–ø–∏—Å—å:

üë§ –ò–º—è: {escape_html(client_name)}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}

–í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?"""
    except ValueError:
        return "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"


def format_booking_success(appointment_id, client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏"""
    try:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)

        return f"""‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üÜî –ù–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏: {appointment_id}
üë§ –ö–ª–∏–µ–Ω—Ç: {escape_html(client_name)}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}

üì± –ú—ã –ø—Ä–∏—à–ª–µ–º –≤–∞–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞ –¥–µ–Ω—å –¥–æ –≤–∏–∑–∏—Ç–∞.
üí¨ –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–ú–æ–∏ –∑–∞–ø–∏—Å–∏"."""
    except ValueError:
        return "‚úÖ –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"


def format_appointment_details(appointment_id, client_name, appointment_date, appointment_time, service, username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏ (HTML)"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    clickable_name = format_client_name_with_profile(client_name, username, profile_link)

    details_text = f"""üìù –î–µ—Ç–∞–ª–∏ –∑–∞–ø–∏—Å–∏:

üÜî ID: {appointment_id}
üë§ –ö–ª–∏–µ–Ω—Ç: {clickable_name}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}"""

    if username:
        username_display = format_username_display(username, profile_link)
        details_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}"

    details_text += "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    return details_text


def format_cancel_confirmation_client(appointment_id, client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    now = datetime.now().date()
    appointment_date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    days_until = (appointment_date_obj - now).days

    warning = ""
    if days_until < 1:
        warning = "\n‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏ –≤ –¥–µ–Ω—å –≤–∏–∑–∏—Ç–∞ –º–æ–∂–µ—Ç –ø–æ–≤–ª–µ—á—å —à—Ç—Ä–∞—Ñ."

    return f"""‚ùå –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏:

üë§ –ö–ª–∏–µ–Ω—Ç: {escape_html(client_name)}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}{warning}

–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å?"""


def format_reschedule_success(appointment_id, client_name, old_date, old_time, new_date, new_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–µ—Ä–µ–Ω–æ—Å–µ"""
    old_date_obj = datetime.strptime(old_date, '%Y-%m-%d').date()
    new_date_obj = datetime.strptime(new_date, '%Y-%m-%d').date()

    old_formatted = format_date_russian(old_date_obj)
    new_formatted = format_date_russian(new_date_obj)

    return f"""‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞!

üÜî ID –∑–∞–ø–∏—Å–∏: {appointment_id}
üë§ –ö–ª–∏–µ–Ω—Ç: {escape_html(client_name)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}

üìÖ –ë—ã–ª–æ: {old_formatted}, {escape_html(old_time)}
üìÖ –°—Ç–∞–ª–æ: {new_formatted}, {escape_html(new_time)}

üì± –ú—ã –ø—Ä–∏—à–ª–µ–º –Ω–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ."""


# ===== –û–ë–©–ò–ï –§–£–ù–ö–¶–ò–ò –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø =====

def format_appointment_info(appointment_id, client_name, appointment_date, appointment_time, service, username=None, profile_link=None):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏ (HTML)"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    clickable_name = format_client_name_with_profile(client_name, username, profile_link)

    info_text = f"""üìù –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:

üÜî ID: {appointment_id}
üë§ –ö–ª–∏–µ–Ω—Ç: {clickable_name}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}"""

    if username:
        username_display = format_username_display(username, profile_link)
        info_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}"

    info_text += "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    return info_text


def format_multiple_appointments(appointments):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
    result_text = f"üîç –ù–∞–π–¥–µ–Ω–æ {len(appointments)} –∑–∞–ø–∏—Å–µ–π:\n\n"

    for appointment_id, client_name, appointment_date, appointment_time, service in appointments:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)
        result_text += f"üÜî {appointment_id}: {escape_html(client_name)} - {formatted_date} {escape_html(appointment_time)} ({escape_html(service)})\n"

    result_text += "\nüìù –í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    return result_text


def format_delete_confirmation(client_name, appointment_date, appointment_time, service, username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è (HTML)"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    clickable_name = format_client_name_with_profile(client_name, username, profile_link)

    confirm_text = f"""‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏:

üë§ –ö–ª–∏–µ–Ω—Ç: {clickable_name}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}"""

    if username:
        username_display = format_username_display(username, profile_link)
        confirm_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}"

    confirm_text += "\n\n‚ùóÔ∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"
    return confirm_text


def format_time_change_success(client_name, appointment_date, old_time, new_time, service, username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ (HTML)"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    clickable_name = format_client_name_with_profile(client_name, username, profile_link)

    success_text = f"""‚úÖ –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!

üë§ –ö–ª–∏–µ–Ω—Ç: {clickable_name}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –°—Ç–∞—Ä–æ–µ –≤—Ä–µ–º—è: {escape_html(old_time)}
üïê –ù–æ–≤–æ–µ –≤—Ä–µ–º—è: {escape_html(new_time)}
üìã –£—Å–ª—É–≥–∞: {escape_html(service)}"""

    if username:
        username_display = format_username_display(username, profile_link)
        success_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}"

    success_text += "\n\nüì± –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏!"
    return success_text


def format_delete_success(client_name, appointment_date, appointment_time, username=None, profile_link=None):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ (HTML)"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    clickable_name = format_client_name_with_profile(client_name, username, profile_link)

    success_text = f"""‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!

üë§ –ö–ª–∏–µ–Ω—Ç: {clickable_name}
üìÖ –î–∞—Ç–∞: {formatted_date}
üïê –í—Ä–µ–º—è: {escape_html(appointment_time)}"""

    if username:
        username_display = format_username_display(username, profile_link)
        success_text += f"\nüë§ –ü—Ä–æ—Ñ–∏–ª—å: {username_display}"

    success_text += "\n\nüì± –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –æ—Ç–º–µ–Ω–µ!"
    return success_text


def format_time_conflict(new_time, formatted_date, conflict_client):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –≤—Ä–µ–º–µ–Ω–∏"""
    return f"""‚ö†Ô∏è –í—Ä–µ–º—è {escape_html(new_time)} –Ω–∞ {formatted_date} —É–∂–µ –∑–∞–Ω—è—Ç–æ –∫–ª–∏–µ–Ω—Ç–æ–º: {escape_html(conflict_client)}

–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è."""


def get_contact_info():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"""
    return """üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:

üè¢ –°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã "–°—Ç–∏–ª—å"
üìç –ê–¥—Ä–µ—Å: —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 123
üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67
üïí –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 09:00 - 21:00
üìß Email: info@style-salon.ru

üöó –ü–∞—Ä–∫–æ–≤–∫–∞ –µ—Å—Ç—å
üöá –†—è–¥–æ–º –º–µ—Ç—Ä–æ "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è"

–ñ–¥–µ–º –≤–∞—Å! üí´"""


def get_about_info():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∞–ª–æ–Ω–µ"""
    return """‚ÑπÔ∏è –û –Ω–∞—à–µ–º —Å–∞–ª–æ–Ω–µ:

üåü –°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã "–°—Ç–∏–ª—å" - —ç—Ç–æ:
‚ú® –û–ø—ã—Ç–Ω—ã–µ –º–∞—Å—Ç–µ—Ä–∞ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º
üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
üíé –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞
üèÜ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥

üë• –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:
üíá‚Äç‚ôÄÔ∏è –ê–Ω–Ω–∞ - —Ç–æ–ø-—Å—Ç–∏–ª–∏—Å—Ç
üé® –ú–∞—Ä–∏—è - –∫–æ–ª–æ—Ä–∏—Å—Ç
üíÖ –ï–ª–µ–Ω–∞ - –º–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞
üíÜ‚Äç‚ôÄÔ∏è –û–ª—å–≥–∞ - –º–∞—Å—Å–∞–∂–∏—Å—Ç

üéÅ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º - —Å–∫–∏–¥–∫–∏!
üì± –£–¥–æ–±–Ω–∞—è –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –±–æ—Ç
‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∏–∑–∏—Ç–∞—Ö

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∫—Ä–∞—Å–æ—Ç—ã! üí´"""