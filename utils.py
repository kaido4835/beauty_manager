from datetime import datetime
from config import MONTHS, WEEKDAYS


def format_date_russian(date_obj):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    day = date_obj.day
    month = MONTHS[date_obj.month]
    weekday = WEEKDAYS[date_obj.weekday()]

    return f"{weekday}, {day} {month}"


def validate_time_format(time_str):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –ß–ß:–ú–ú"""
    try:
        time_parts = time_str.split(':')
        if len(time_parts) != 2:
            return False

        hours = int(time_parts[0])
        minutes = int(time_parts[1])

        return 0 <= hours <= 23 and 0 <= minutes <= 59
    except ValueError:
        return False


def validate_date_format(date_str):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã –î–î.–ú–ú.–ì–ì–ì–ì"""
    try:
        datetime.strptime(date_str, '%d.%m.%Y')
        return True
    except ValueError:
        return False


def format_schedule_text(appointments, target_date):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    date_text = format_date_russian(target_date)

    if appointments:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö (—Å ID –∏–ª–∏ –±–µ–∑)
        if len(appointments[0]) == 4:  # –§–æ—Ä–º–∞—Ç —Å ID (id, client_name, appointment_time, service)
            schedule_text = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date_text}:\n\n"
            for appointment_id, client_name, appointment_time, service in appointments:
                schedule_text += f"üïê {appointment_time} - {client_name}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {service}\n"
                schedule_text += f"üÜî ID: {appointment_id}\n\n"
        else:  # –û–±—ã—á–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (client_name, appointment_time, service)
            schedule_text = f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {date_text}:\n\n"
            for client_name, appointment_time, service in appointments:
                schedule_text += f"üïê {appointment_time} - {client_name}\n"
                schedule_text += f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
    else:
        schedule_text = f"üìÖ –ù–∞ {date_text} –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç"

    return schedule_text


def format_appointment_info(appointment_id, client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø–∏—Å–∏"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    return (
        f"üìù –ù–∞–π–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å:\n\n"
        f"üÜî ID: {appointment_id}\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
        f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
        f"üïê –í—Ä–µ–º—è: {appointment_time}\n"
        f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )


def format_multiple_appointments(appointments):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"""
    result_text = f"üîç –ù–∞–π–¥–µ–Ω–æ {len(appointments)} –∑–∞–ø–∏—Å–µ–π:\n\n"
    for appointment_id, client_name, appointment_date, appointment_time, service in appointments:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)
        result_text += f"üÜî {appointment_id}: {client_name} - {formatted_date} {appointment_time} ({service})\n"

    result_text += "\nüìù –í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω—ã–π ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
    return result_text


def format_delete_confirmation(client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    return (
        f"‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏:\n\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
        f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
        f"üïê –í—Ä–µ–º—è: {appointment_time}\n"
        f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
        f"‚ùóÔ∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"
    )


def format_time_change_success(client_name, appointment_date, old_time, new_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    return (
        f"‚úÖ –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!\n\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
        f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
        f"üïê –°—Ç–∞—Ä–æ–µ –≤—Ä–µ–º—è: {old_time}\n"
        f"üïê –ù–æ–≤–æ–µ –≤—Ä–µ–º—è: {new_time}\n"
        f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
        f"üì± –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏!"
    )


def format_delete_success(client_name, appointment_date, appointment_time):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏"""
    date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
    formatted_date = format_date_russian(date_obj)

    return (
        f"‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\n\n"
        f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
        f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
        f"üïê –í—Ä–µ–º—è: {appointment_time}\n\n"
        f"üì± –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –æ–± –æ—Ç–º–µ–Ω–µ!"
    )


def format_appointment_confirmation(client_name, appointment_date, appointment_time, service):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"""
    try:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)

        return (
            f"üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏:\n\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
            f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
            f"üïê –í—Ä–µ–º—è: {appointment_time}\n"
            f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
            f"–í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã?"
        )
    except ValueError:
        return "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"


def format_appointment_success(client_name, appointment_date, appointment_time, service, appointment_id):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏"""
    try:
        date_obj = datetime.strptime(appointment_date, '%Y-%m-%d').date()
        formatted_date = format_date_russian(date_obj)

        return (
            f"‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n"
            f"üÜî ID –∑–∞–ø–∏—Å–∏: {appointment_id}\n"
            f"üë§ –ö–ª–∏–µ–Ω—Ç: {client_name}\n"
            f"üìÖ –î–∞—Ç–∞: {formatted_date}\n"
            f"üïê –í—Ä–µ–º—è: {appointment_time}\n"
            f"üìã –£—Å–ª—É–≥–∞: {service}\n\n"
            f"üì± –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É–≤–µ–¥–æ–º–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞!"
        )
    except ValueError:
        return "‚úÖ –ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"


def validate_client_name(name):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    return name.strip() != "" and len(name.strip()) >= 2


def validate_service_name(service):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏"""
    return service.strip() != "" and len(service.strip()) >= 2


def format_time_conflict(new_time, formatted_date, conflict_client):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–µ –≤—Ä–µ–º–µ–Ω–∏"""
    return (
        f"‚ö†Ô∏è –í—Ä–µ–º—è {new_time} –Ω–∞ {formatted_date} —É–∂–µ –∑–∞–Ω—è—Ç–æ –∫–ª–∏–µ–Ω—Ç–æ–º: {conflict_client}\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è."
    )